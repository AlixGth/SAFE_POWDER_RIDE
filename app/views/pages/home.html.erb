<%= render 'shared/banner' %>

<div class="container">
  <div class="card-trip">
    <img src="http://savoie.alpes-refuges.fr/tzr/scripts/resizer.php?filename=CIRCUIT/photo/0e/d7/4y4cezew3d4h&mime=image%2Fjpeg&&originalname=Test.jpg&geometry=907x595%5E&crop=907x595" />
    <div class="card-trip-infos">
      <div>
        <h2>Col des Jumelles Sud par le Vallon de Fontenil</h2>
        <p>Massif des Ecrins</p>
      </div>
      <p class="ml-3"> 2.2 E1 </p>
      <h1 class="risk-level-infos-large"> 3 </h1>
    </div>
  </div>

  <div class="my-5">

  </div>

  <div class="card-product">
    <img src="http://savoie.alpes-refuges.fr/tzr/scripts/resizer.php?filename=CIRCUIT/photo/0e/d7/4y4cezew3d4h&mime=image%2Fjpeg&&originalname=Test.jpg&geometry=907x595%5E&crop=907x595" />
    <div class="card-product-infos">
      <h2>Col des Jumelles Sud par le Vallon de Fontenil</h2>
      <div class="d-flex justify-content-start align-items-center mt-3">
        <h3 class="risk-level-infos-small mr-3"> 2</h3>
        <p>Massif des Ecrins</p>
      </div>
    </div>
  </div>

  <div class="my-5">

  </div>

</div>
<%
def radians(degrees)
  degrees * (Math::PI/180)
end

def getDistance(lon1, lat1, lon2, lat2)
  r = 6371;
  dLat = radians(lat2-lat1)
  dLon = radians(lon2-lon1) 
  a = (Math.sin(dLat/2) * Math.sin(dLat/2)) + (Math.cos(radians(lat1)) * Math.cos(radians(lat2)) * Math.sin(dLon/2) * Math.sin(dLon/2))
  c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)) 
  d = r * c
  return d
end

def getColor(lng1, lat1, lng2, lat2, elvt1, elvt2)
  if elvt1 == elvt2
    return '#A8F70A'
  end
  dist = getDistance(lng1, lat1, lng2, lat2)
  slope = (elvt1 - elvt2).abs / (dist * 1000)
  if slope >= 0.3
    return '#F71F0A'
  elsif slope >= 0.15
    return '#F7B20A'
  else
    return '#A8F70A'
  end
end

url = Dir.pwd + "/app/views/pages/tour.gpx"
doc = Nokogiri::XML(open(url))

trackpoints = doc.xpath('//xmlns:trkpt')
array = []
doc.search('trkpt').each_with_index do |trkpt, index|
  ele = trkpt.search('ele').text
  array <<  [trkpt.attribute("lon").value, trkpt.attribute("lat").value, ele ]
end

reduce_value = (array.size.to_f / 300).round
array = array.select.with_index do |coordinate, index|
  index % reduce_value == 0
end

for i in (1...array.size)
  if i % 4 == 0
    lng1 = array[i-1][0].to_f
    lat1 = array[i-1][1].to_f
    lng2 = array[i][0].to_f
    lat2 = array[i][1].to_f
    yes = array[i]
    color = getColor(lng1, lat1, lng2, lat2, array[i-1][2].to_i, array[i][2].to_i)
    array[i] = [array[i][0], array[i][1], color]
  end
end

%>
<div
  id="map"
  data-mapbox-api-key="<%= ENV['MAPBOX_API_KEY'] %>"
></div>

<div id="hidden" data-waypoints = "<%= array %>" ></div>
